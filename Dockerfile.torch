FROM nubificus_base_build

# Set environment variable to prevent interactive installation
ENV DEBIAN_FRONTEND=noninteractive

USER root

# Install PyTorch dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        libopencv-dev \
        python3-dev \
        python3-pip \
        python3-setuptools \
        python3-wheel \
        python3-yaml \
        python3-numpy \
        unzip \
        libopenblas-dev \
        libjpeg-dev \
        libpng-dev \
        libtiff-dev \
        libavcodec-dev \
        libavformat-dev \
        libswscale-dev \
        libv4l-dev \
        libxvidcore-dev \
        libx264-dev \
        libatlas-base-dev \
        gfortran \
        libffi-dev \
        libssl-dev && \
    apt-get -y clean && \
    pip3 install typing_extensions && \
    rm -rf /var/cache/apt /var/lib/apt/lists/* /tmp/* /var/tmp/*

ARG TORCH_VERSION
# Build and install PyTorch
RUN [ -z "${TORCH_VERSION}" ] && \
    TORCH_TAG=$(git ls-remote --tags --refs --sort='v:refname' \
        https://github.com/pytorch/pytorch | \
        grep -E "refs/tags/v[0-9]+\.[0-9]+.[0-9]+$" | awk -F/ 'END{print$NF}') && \
    TORCH_VERSION=${TORCH_TAG}; \
    git clone https://github.com/pytorch/pytorch --depth 1 --recursive \
        -b "${TORCH_VERSION}" && \
    cd pytorch && \
    export _GLIBCXX_USE_CXX11_ABI=1 && \
    export USE_CUDA=0 && \
    cmake -S . -B build && \
    cmake --build build --parallel "$(nproc)" && \
    cmake --install build --prefix=/usr/local && \
    cd .. && rm -rf pytorch

WORKDIR /home/runner
USER runner
ENTRYPOINT ["/entrypoint.sh"]
