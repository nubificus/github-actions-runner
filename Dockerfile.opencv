FROM nubificus_base_build

# Set environment variable to prevent interactive installation
ENV DEBIAN_FRONTEND=noninteractive

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

USER root

# Install required dependencies for OpenCV.
RUN apt-get update && \
    apt-get purge -y libunwind-* && \
    apt-get install -y --no-install-recommends \
        build-essential \
        gcc \
        g++ \
        cmake \
        git \
        pkg-config \
        libgtk-3-dev \
        libavcodec-dev \
        libavformat-dev \
        libswscale-dev \
        libv4l-dev \
        libxvidcore-dev \
        libx264-dev \
        openexr \
        libopenexr-dev \
        libatlas-base-dev \
        libgstreamer-plugins-base1.0-dev \
        libgstreamer1.0-dev \
        libpng-dev \
        libjpeg-dev \
        libtiff-dev \
        libtbb2 \
        libtbb-dev \
        libdc1394-dev \
        gfortran \
        python3-dev \
        python3-numpy \
        python3-pip && \
    apt-get -y clean && \
    rm -rf /var/cache/apt /var/lib/apt/lists/* /tmp/* /var/tmp/*

ARG OPENCV_VERSION
# Build and install OpenCV.
RUN [ -z "${OPENCV_VERSION}" ] && \
    OPENCV_TAG=$(git ls-remote --tags --refs --sort='v:refname' \
        https://github.com/opencv/opencv.git | \
        grep -E "refs/tags/[0-9]+\.[0-9]+.[0-9]+$" | awk -F/ 'END{print$NF}') && \
    OPENCV_VERSION=${OPENCV_TAG}; \
    git clone https://github.com/opencv/opencv.git --depth 1 \
        -b "${OPENCV_VERSION}" && \
    git clone https://github.com/opencv/opencv_contrib.git --depth 1 \
        -b "${OPENCV_VERSION}" && \
    cd opencv && \
    cmake -S . -B build \
        -DOPENCV_EXTRA_MODULES_PATH="$(pwd)"/../opencv_contrib/modules \
        -DBUILD_opencv_legacy=OFF && \
    cmake --build build --parallel "$(nproc)" && \
    cmake --install build --prefix=/usr/local && \
    cd .. && rm -rf opencv*

# Copy scripts.
COPY scripts/ /usr/local/bin/

COPY entrypoint.sh /
WORKDIR /home/runner
USER runner
ENTRYPOINT ["/entrypoint.sh"]
